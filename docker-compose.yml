version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: securepaste-postgres
    environment:
      - POSTGRES_DB=pastebin
      - POSTGRES_USER=pastebin
      - POSTGRES_PASSWORD=pastebin123
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - pastebin-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pastebin -d pastebin"]
      interval: 30s
      timeout: 10s
      retries: 5

  # SecurePaste Application
  pastebin:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: securepaste-app
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-pastebin}
      - DB_USERNAME=${DB_USERNAME:-pastebin}
      - DB_PASSWORD=${DB_PASSWORD:-pastebin123}
      - BASE_URL=${BASE_URL:-http://localhost:8080}
      - JAVA_OPTS=-Xmx512m -XX:+UseContainerSupport
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pastebin-network
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/pastes/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: securepaste-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - pastebin
    networks:
      - pastebin-network
    profiles:
      - with-nginx
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: securepaste-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - pastebin-network
    profiles:
      - with-redis
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local
  redis_data:
    driver: local

networks:
  pastebin-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16