# Application configuration is now handled via environment variables
# No separate ConfigMap needed for application.yml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: securepaste-app
  namespace: securepaste
  labels:
    app: securepaste
    component: application
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: securepaste
      component: application
  template:
    metadata:
      labels:
        app: securepaste
        component: application
    spec:
      containers:
      - name: securepaste
        image: securepaste:latest  # Replace with your image
        imagePullPolicy: IfNotPresent
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        # Database connection from ConfigMap
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: database-host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: database-port
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: database-name
        - name: DB_URL
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: database-url
        # Database credentials from Secret
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: BASE_URL
          value: "https://paste.yourdomain.com"  # Change this to your domain
        - name: JAVA_OPTS
          value: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=80.0 -XX:+ExitOnOutOfMemoryError"
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/pastes/health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/pastes/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false # Vaadin needs write access for temporary files
      volumes:
      - name: logs
        emptyDir: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: securepaste-service
  namespace: securepaste
  labels:
    app: securepaste
    component: application
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 30080
    protocol: TCP
    name: http
  selector:
    app: securepaste
    component: application
---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: securepaste-hpa
  namespace: securepaste
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: securepaste-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max